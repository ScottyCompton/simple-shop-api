// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  price     Float
  category  String
  inStock   Boolean  @default(true)
  shortDesc String   @db.Text
  imgUrl    String   @db.Text
  mfgName   String
  longDesc  String   @db.LongText
  
  @@map("products")
}

model User {
  id            Int      @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String   @unique
  
  // User can have multiple authentication methods
  auths         Auth[]
  
  // Billing information
  billingFirstName String
  billingLastName  String
  billingAddress1  String
  billingAddress2  String?
  billingCity      String
  billingState     String
  billingZip       String
  billingPhone     String
  
  // Shipping information
  shippingFirstName String
  shippingLastName  String
  shippingAddress1  String
  shippingAddress2  String?
  shippingCity      String
  shippingState     String
  shippingZip       String
  shippingPhone     String
  
  @@map("users")
}

model Auth {
  id            Int      @id @default(autoincrement())
  provider      String   // "google", "github", etc.
  providerId    String   // The ID from the provider
  avatar        String?  // Avatar URL provided by the authentication provider
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int
  createdAt     DateTime @default(now())
  lastUsedAt    DateTime @default(now())
  
  // Each user can have only one auth entry per provider
  @@unique([userId, provider])
  // Each provider ID should be unique per provider
  @@unique([provider, providerId])
  @@map("auth")
}

model State {
  id    Int    @id @default(autoincrement())
  abbr  String @unique
  state String
  
  @@map("states")
}

model ShippingType {
  id    Int   @id @default(autoincrement())
  value String @unique
  label String
  price Float
}